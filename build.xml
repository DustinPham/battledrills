<?xml version="1.0"?>


<project name="${product.id}" default="archive" basedir=".">
	<!--<import file="../cms-build.xml"/> -->

    <!-- Give user a chance to override without editing this file or typing -D -->
    <property file="${basedir}/build.properties" />

    <property name="profile" value="dev" />
    <property file="build-${profile}.properties" />

    <!-- set global properties for this build -->
    <property name="project.name" value="${product.id}"/>
    <property name="project.war" value="true"/>

    <property name="dist.dir" value="dist" />
    <property name="src.dir" value="src" />
    <!--<property name="test.model.dir" value="test" /> -->
    <!--<property name="test.classes.dir" value="${test.model.dir}/classes" />
    <property name="test.results.dir" value="${test.model.dir}/testresults" />-->
    <property name="lib.dir" value="WebContent/WEB-INF/lib" />
    <property name="war.dir" value="exploded-archives/${project.name}.war" />
    <property name="exploded.archive.dir" value="${war.dir}" />
    <property name="classes.model.dir" value="${war.dir}/WEB-INF/classes" />
    <property name="tomcat.deploy.dir" value="${tomcat.home}/webapps" />
    <property name="tomcat.war.deploy.dir" value="${tomcat.deploy.dir}/${project.name}" />
    <property name="packaged.archive" value="${dist.dir}/${project.name}.war"/>
    <property name="javac.debug" value="true" />
    <property name="javac.deprecation" value="false" />
    <property name="debug" value="false" />
	
	<fileset id="lib-web" dir="WebContent/WEB-INF/lib">
		<include name="*.jar" />
	</fileset>
	<fileset id="lib-tomcat" dir="${tomcat.home}/lib">
	    <include name="*.jar"/>
	</fileset>
	
    <path id="tomcat.build.classpath">
		<fileset refid="lib-web" />
		<fileset refid="lib-tomcat" />
	</path>

   <!-- Ant Libraries -->
   <property name="ant.lib.dir" value="libs/ant"/>
   <path id="ant.classpath">
      <fileset id="ant.libs" dir="${ant.lib.dir}">
         <include name="**/*.jar"/>
      </fileset>
   </path>

    <target name="init" description="Initialize the build">
        <mkdir dir="${classes.model.dir}" />
        <mkdir dir="${dist.dir}" />
    </target>
    
    <target name="compilemodel" depends="init"
            description="Compile the Java source code"
            unless="eclipse.running">
        <javac classpathref="tomcat.build.classpath" 
               destdir="${classes.model.dir}" 
               debug="${javac.debug}" 
               deprecation="${javac.deprecation}"
               includeantruntime="false"
               nowarn="on">
            <src path="${src.dir}" />
        </javac>
    </target>
    
    <target name="copyclasses" depends="init"
            description="Copy the classes that were compiled by eclipse"
            if="eclipse.running">
        <!-- TODO check how the groovy eclipse plugin works, does it compile? -->
        <copy todir="${classes.model.dir}">
            <fileset dir="classes/main">
                <include name="**/*.class"/>
            </fileset>
        </copy>
    </target>
            
    <target name="compile" depends="compilemodel,copyclasses"
            description="Compile the various source paths"/>
    
    <target name="war" depends="compile"
            description="Build the WAR structure in a staging directory">
        <copy todir="${war.dir}">
			<fileset dir="${basedir}">
       			<include name="*.html"/>
       		</fileset>
            <fileset dir="${basedir}/WebContent">
				<exclude name="**/node_modules/**"/>
			</fileset>
        </copy>
    
       	<copy todir="${war.dir}/WEB-INF/classes">
       		<fileset dir="${src.dir}">
    			<include name="*.properties"/>
       			<include name="*.cfg.xml"/>
       			<include name="*.skin.properties"/>
				<include name="*.xml"/>
				<include name="*.dtd"/>
       		</fileset>
			<!--<fileset dir="${src.dir}/resources"/>-->
    		</copy>
    </target>
    
    <target name="archive" depends="war"
            description="Package the WAR archive">
    		<tstamp>
    			<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
    		</tstamp>
        <jar jarfile="${dist.dir}/${project.name}.war" basedir="${war.dir}">
    			<manifest>
    				<attribute name="Organization-Name" value="${organization.name}" />
    				<attribute name="Product-ID" value="${product.id}" />
    				<attribute name="Product-Version" value="${product.version}" />
    				<attribute name="Release-Date" value="${TODAY}" />
    				<attribute name="Built-By" value="${user.name}" />
    			</manifest>
        </jar>
    </target>
	
	<target name="deploy" depends="archive" description="Deploy the packaged archive">
		<fail unless="tomcat.home">tomcat.home not set</fail>
		<copy todir="${tomcat.deploy.dir}" file="${dist.dir}/${project.name}.war" />
	</target>
    
    <target name="undeploy" description="Undeploy the packaged archive" >
        <delete file="${tomcat.deploy.dir}/${project.name}.war" failonerror="false"/>
        <delete dir="${tomcat.deploy.dir}/${project.name}" failonerror="false"/>
    </target>
	
	<target name="build-client" description="Runs npm run build to build client code" >
        <exec executable="npm.cmd" failonerror="true" dir="./WebContent">
			<arg line="run build"/>
		</exec>
    </target>

	<target name="redeploy-production" depends="undeploy,clean,build-client,deploy"
        description="Undeploy the packaged archive, clean, then deploy the packaged archive"/>
	
    <target name="redeploy" depends="undeploy,clean,deploy"
        description="Undeploy the packaged archive, clean, then deploy the packaged archive"/>
    
    <target name="clean" description="Clean out the staging directory">
        <delete dir="${dist.dir}"/>
        <delete dir="${basedir}/exploded-archives"/>
    </target>

</project>
